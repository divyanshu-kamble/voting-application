pipeline {
    agent {
        kubernetes {
            defaultContainer 'jnlp'
            yaml '''
    apiVersion: v1
    kind: Pod
    metadata:
        namespace: jenkins-testing
        name: sample-kube
    spec:
      containers:
      - name: dind
        image: docker:24-dind
        volumeMounts:
        - mountPath: /var/build-data/
          name: jenkins-bld
        securityContext:
            privileged: true

      - name: python
        image: python:latest
        command: [ "/bin/bash", "-c", "--" ]
        args: [ "while true; do sleep 30; done;" ]
        env:
        - name: JENKINS-URL
          values: http://10.100.132.165:8080
        securityContext:
            allowPrivilegeEscalation: true
        volumeMounts:
        - mountPath: /var/build-data/
          name: jenkins-bld
        securityContext:
            privileged: true


      volumes:
      - name: jenkins-bld
        persistentVolumeClaim:
          claimName: jenkins-build
'''
        }
}
        stages {
            stage('python container') {
                steps {
                    container('python') {
                        sh '''
                        pwd
                        ls
                        cd vote
                        pip3 install -r requirements.txt
                        '''
                    }
                }
            }
            stage('Run in docker container') {
                steps {
                    container('dind') {
                        sh '''
                        cd vote
                        docker build -t divyanshuk/vote:$BUILD_NUMBER -t divyanshuk/vote:latest .
                        '''
                    }
                }
            }
            stage('Run trivy scan') {
                steps {
                    container('dind') {
                        sh '''
                        /* groovylint-disable-next-line LineLength */
                        docker run -v /var/run/docker.sock:/var/run/docker.sock  aquasec/trivy:latest image -s HIGH -s CRITICAL --exit-code 0 divyanshuk/vote:$BUILD_NUMBER
                        '''
                    }
                }
            }
            stage('Upload image to Docker Registry') {
                steps {
                    /* groovylint-disable-next-line LineLength */
                    withCredentials([usernamePassword(credentialsId: 'Docker', passwordVariable: 'password', usernameVariable: 'username')])
                     {
                    container('dind') {
                        sh '''
                            docker login -u $username -p $password
                            docker push divyanshuk/vote:$BUILD_NUMBER
                            docker push divyanshuk/vote:latest
                        '''
                    }
                     }
                }
            }
        }
}
