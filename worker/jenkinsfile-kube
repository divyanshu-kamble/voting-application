pipeline {
    agent {
        kubernetes {
            defaultContainer 'jnlp'
            yaml '''
    apiVersion: v1
    kind: Pod
    metadata:
        namespace: jenkins-testing
        name: sample-kube
    spec:
      containers:
      - name: dind
        image: docker:24-dind
        volumeMounts:
        - mountPath: /var/build-data/
          name: jenkins-bld
        securityContext:
            privileged: true

      - name: dotnet
        image: bitnami/dotnet-sdk:latest
        command: [ "/bin/bash", "-c", "--" ]
        args: [ "while true; do sleep 30; done;" ]
        volumeMounts:
        - mountPath: /var/build-data/
          name: jenkins-bld
        securityContext:
            privileged: true

      - name: trivy
        image: aquasec/trivy:latest
        command: ["/usr/bin/env", "sleep", "9999s"]
        env: 
        - name: DOCKER_HOST 
          value: "tcp://127.0.0.1:2375"
        volumeMounts:
        - mountPath: /var/build-data/
          name: jenkins-bld
        securityContext:
            privileged: true
      volumes:
      - name: jenkins-bld
        persistentVolumeClaim:
          claimName: jenkins-build
'''
        }
    }
        stages {
            stage('dotnet restore') {
                steps {
                    container('dotnet') {
                        sh 'dotnet restore ./worker/Worker.csproj'
                    }
                }
            }
            stage('dotnet clean') {
                steps {
                    container('dotnet') {
                        sh 'dotnet clean ./worker/Worker.csproj'
                    }
                }
            }
            stage('dotnet build') {
                steps {
                    container('dotnet') {
                        sh 'dotnet build ./worker/Worker.csproj'
                    }
                }
            }
            stage('Run in docker container') {
                steps {
                    container('dind') {
                        sh '''
                        cd worker
                        docker buildx build --no-cache --build-arg TARGETPLATFORM=linux/amd64 -t divyanshuk/worker:$BUILD_NUMBER -t divyanshuk/worker:latest .
                        '''
                    }
                }
            }
            stage('Run trivy scan') {
                steps {
                    container('dind') {
                        sh '''
                        docker run -v /var/run/docker.sock:/var/run/docker.sock  aquasec/trivy:latest image -s HIGH -s CRITICAL --exit-code 0 divyanshuk/worker:$BUILD_NUMBER
                        '''
                    }
                }
            }
        }
}
